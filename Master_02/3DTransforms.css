* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    width: 100vw;
    height: 100vh;
}

.container {
    width: 100%;
    height: 100%;

    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 1rem;

    place-items: center;
}

.item {
    height: 150px;
    width: 150px;
    background-color: rgb(71, 115, 211);
    border: 2px solid black;
}

#rotateX:hover {
    transform: rotateX(45deg);
    /* transform: rotateX(-45deg); */
}

#rotateY:hover {
    transform: rotateY(45deg);
    /* transform: rotateY(-45deg); */
}

#rotateZ:hover {
    transform: rotateZ(45deg);
    /* transform: rotateZ(-45deg); */
}

#translateX:hover {
    transform: translateX(100px);
    /* transform: translateX(-100px); */
}

#translateY:hover {
    transform: translateY(100px);
    /* transform: translateY(-100px); */
}

#translateZ:hover {
    /* Here perspective(200px) will tell from how much far we are watching this box */
    /* +100px means it will come closer to us and -100px means it is going far from us*/
    transform: perspective(200px) translateZ(100px);
    /* transform: perspective(200px) translateZ(-100px); */
}

#scaleX:hover {
    transform: scaleX(1.5);
}

#scaleY:hover {
    transform: scaleY(1.5);
}

#scaleZ:hover {
    /* Here without perspective and rotate, it is not visible in 2D frame */
    transform: perspective(400px) scaleZ(5) rotateY(30deg);
}

/* 
    3D Transforms:
    --------------
    Using it, Elements can be rotated, translated, scaled and skewed in 3 Dimensions.

    Properties:
    -----------
    . rotateX()
    . rotateY()
    . rotateZ()
    . rotate()
    . rotate3d()
    . scaleX()
    . scaleY()
    . scaleZ()
    . scale()
    . scale3d()
    . translateX()
    . translateY()
    . translateZ()
    . translate()
    . translate3d()
    . skewX()
    . skewY()
    . skew()
*/